#include "Servo.h"
#define MAX_ANALOG_INPUT_VAL 1023

const int servo_pin1 = 9;  
const int servo_pin2 = 8;
const int servo_pin3 = 7;
const int servo_pin4 = 6;

const int potpin1 = A0;
const int potpin2 = A1;
const int potpin3 = A2;
const int potpin4 = A3;

// Define the number of samples to keep track of. The higher the number, the
// more the readings will be smoothed, but the slower the output will respond to
// the input. Using a constant rather than a normal variable lets us use this
// value to determine the size of the readings array.
const int SMOOTHING_WINDOW_SIZE = 20; // 10 samples

int _samples[SMOOTHING_WINDOW_SIZE];  // the readings from the analog input
int _curReadIndex = 0;                // the index of the current reading
int _sampleTotal = 0;                 // the running total
int _sampleAvg = 0;                   // the average

Servo Servo1;
Servo Servo2;
Servo Servo3;
Servo Servo4;
int val;


void setup() {
  
  Serial.begin(9600);
  Servo1.attach(servo_pin1);
  Servo2.attach(servo_pin2);
  Servo3.attach(servo_pin3);
  Servo4.attach(servo_pin4);

  // initialize all the readings to 0:
  for (int i = 0; i < SMOOTHING_WINDOW_SIZE; i++) {
    _samples[i] = 0;}
  
}

void loop() {

  // subtract the last reading:
  _sampleTotal = _sampleTotal - _samples[_curReadIndex];
  
  // read the sensor value
  int sensorVal1 = analogRead(potpin1);
  int sensorVal2 = analogRead(potpin2);
  int sensorVal3 = analogRead(potpin3);
  int sensorVal4 = analogRead(potpin4);
  _samples[_curReadIndex] = sensorVal1;
  _samples[_curReadIndex] = sensorVal2;
  _samples[_curReadIndex] = sensorVal3;
  _samples[_curReadIndex] = sensorVal4;
  
  // add the reading to the total:
  _sampleTotal = _sampleTotal + _samples[_curReadIndex];
  
  
  // advance to the next position in the array:
  _curReadIndex = _curReadIndex + 1;

  // if we're at the end of the array...
  if (_curReadIndex >= SMOOTHING_WINDOW_SIZE) {
    // ...wrap around to the beginning:
    _curReadIndex = 0;
  }

  // calculate the average:
  _sampleAvg = _sampleTotal / SMOOTHING_WINDOW_SIZE;
  
  // set the LED brightness to the smoothed value
  int val1 = map(_sampleAvg, 0, MAX_ANALOG_INPUT_VAL, 1, 179);
    Servo1.write(val1);

  int val2 = map(_sampleAvg, 0, MAX_ANALOG_INPUT_VAL, 1, 179);
    Servo2.write(val2);

  int val3 = map(_sampleAvg, 0, MAX_ANALOG_INPUT_VAL, 1, 179);
    Servo3.write(val3);

  int val4 = map(_sampleAvg, 0, MAX_ANALOG_INPUT_VAL, 1, 179);
    Servo4.write(val4);
  
  //analogWrite(servo_pin1, val);

  // print the raw pot value and the converted led value
  Serial.print("AnalogIn:");
  Serial.print(sensorVal1);
  Serial.print(", ");
  Serial.print("Smoothed:");
  Serial.println(_sampleAvg);

  delay(50);
}
